/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileWriter;
import java.lang.reflect.InvocationTargetException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.BadLocationException;
import static notepad.Themes.Info;

/**
 *
 * @author sachindehury2015@gmail.com
 */
public class Notepad extends javax.swing.JFrame {

    
    /**
     * Creates new form Notepad
     */
    public Notepad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane = new javax.swing.JScrollPane();
        Text_area = new javax.swing.JTextArea();
        StatusBar_Label = new javax.swing.JLabel();
        Menu = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        New = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        Save_as = new javax.swing.JMenuItem();
        File_Separator1 = new javax.swing.JPopupMenu.Separator();
        Page_Setup = new javax.swing.JMenuItem();
        Print = new javax.swing.JMenuItem();
        File_Separator2 = new javax.swing.JPopupMenu.Separator();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Undo = new javax.swing.JMenuItem();
        Edit_Separator1 = new javax.swing.JPopupMenu.Separator();
        Cut = new javax.swing.JMenuItem();
        Copy = new javax.swing.JMenuItem();
        Paste = new javax.swing.JMenuItem();
        Delete = new javax.swing.JMenuItem();
        Edit_Separator2 = new javax.swing.JPopupMenu.Separator();
        Search = new javax.swing.JMenuItem();
        Find = new javax.swing.JMenuItem();
        Find_Next = new javax.swing.JMenuItem();
        Replace = new javax.swing.JMenuItem();
        Go_To = new javax.swing.JMenuItem();
        Edit_Separator3 = new javax.swing.JPopupMenu.Separator();
        Select_all = new javax.swing.JMenuItem();
        Time_Date = new javax.swing.JMenuItem();
        Format = new javax.swing.JMenu();
        Word_Warp = new javax.swing.JCheckBoxMenuItem();
        Font = new javax.swing.JMenuItem();
        View = new javax.swing.JMenu();
        Zoom = new javax.swing.JMenu();
        Zoom_in = new javax.swing.JMenuItem();
        Zoom_out = new javax.swing.JMenuItem();
        Restore_Zoom = new javax.swing.JMenuItem();
        Status_Bar = new javax.swing.JCheckBoxMenuItem();
        View_Separator1 = new javax.swing.JPopupMenu.Separator();
        Theme = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        View_Help = new javax.swing.JMenuItem();
        Help_Separator1 = new javax.swing.JPopupMenu.Separator();
        About = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(name);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        setLocation(new java.awt.Point(400, 250));
        setName("Main_Frame"); // NOI18N

        Text_area.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Text_area.setBorder(null);
        Text_area.setMinimumSize(new java.awt.Dimension(40, 30));
        ScrollPane.setViewportView(Text_area);

        StatusBar_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        StatusBar_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        Menu.setToolTipText("");
        Menu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        File.setText("File");
        File.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        New.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        New.setText("New");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });
        File.add(New);

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        Open.setText("Open");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        File.add(Open);

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        Save_as.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        Save_as.setText("Save As");
        Save_as.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_asActionPerformed(evt);
            }
        });
        File.add(Save_as);
        File.add(File_Separator1);

        Page_Setup.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        Page_Setup.setText("Page Setup");
        Page_Setup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Page_SetupActionPerformed(evt);
            }
        });
        File.add(Page_Setup);

        Print.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        Print.setText("Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });
        File.add(Print);
        File.add(File_Separator2);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        Menu.add(File);

        Edit.setText("Edit");
        Edit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        Undo.setText("Undo");
        Undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoActionPerformed(evt);
            }
        });
        Edit.add(Undo);
        Edit.add(Edit_Separator1);

        Cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut.setText("Cut");
        Cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutActionPerformed(evt);
            }
        });
        Edit.add(Cut);

        Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy.setText("Copy");
        Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyActionPerformed(evt);
            }
        });
        Edit.add(Copy);

        Paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste.setText("Paste");
        Paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteActionPerformed(evt);
            }
        });
        Edit.add(Paste);

        Delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        Edit.add(Delete);
        Edit.add(Edit_Separator2);

        Search.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        Edit.add(Search);

        Find.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        Find.setText("Find");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });
        Edit.add(Find);

        Find_Next.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        Find_Next.setText("Find Next");
        Find_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Find_NextActionPerformed(evt);
            }
        });
        Edit.add(Find_Next);

        Replace.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        Replace.setText("Replace");
        Replace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReplaceActionPerformed(evt);
            }
        });
        Edit.add(Replace);

        Go_To.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        Go_To.setText("Go To");
        Go_To.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Go_ToActionPerformed(evt);
            }
        });
        Edit.add(Go_To);
        Edit.add(Edit_Separator3);

        Select_all.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        Select_all.setText("Select All");
        Select_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_allActionPerformed(evt);
            }
        });
        Edit.add(Select_all);

        Time_Date.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        Time_Date.setText("Time/Date");
        Time_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Time_DateActionPerformed(evt);
            }
        });
        Edit.add(Time_Date);

        Menu.add(Edit);

        Format.setText("Format");
        Format.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Word_Warp.setText("Word Warp");
        Word_Warp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Word_WarpActionPerformed(evt);
            }
        });
        Format.add(Word_Warp);

        Font.setText("Font");
        Font.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontActionPerformed(evt);
            }
        });
        Format.add(Font);

        Menu.add(Format);

        View.setText("View");
        View.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Zoom.setText("Zoom");

        Zoom_in.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_EQUALS, java.awt.event.InputEvent.CTRL_MASK));
        Zoom_in.setText("Zoom In");
        Zoom_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Zoom_inActionPerformed(evt);
            }
        });
        Zoom.add(Zoom_in);

        Zoom_out.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_MASK));
        Zoom_out.setText("Zoom Out");
        Zoom_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Zoom_outActionPerformed(evt);
            }
        });
        Zoom.add(Zoom_out);

        Restore_Zoom.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_0, java.awt.event.InputEvent.CTRL_MASK));
        Restore_Zoom.setText("Restore Default Zoom");
        Restore_Zoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Restore_ZoomActionPerformed(evt);
            }
        });
        Zoom.add(Restore_Zoom);

        View.add(Zoom);

        Status_Bar.setText("Status Bar");
        Status_Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Status_BarActionPerformed(evt);
            }
        });
        View.add(Status_Bar);
        View.add(View_Separator1);

        Theme.setText("Theme");
        Theme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemeActionPerformed(evt);
            }
        });
        View.add(Theme);

        Menu.add(View);

        Help.setText("Help");
        Help.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Help.setPreferredSize(null);

        View_Help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        View_Help.setText("View Help");
        View_Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_HelpActionPerformed(evt);
            }
        });
        Help.add(View_Help);
        Help.add(Help_Separator1);

        About.setText("About NotePad");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        Help.add(About);

        Menu.add(Help);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(600, Short.MAX_VALUE)
                .addComponent(StatusBar_Label))
            .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusBar_Label))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        if(Text_area.getText().equals(""))
        {
            Text_area.setText("");
            setTitle(name);
        }
        else
        {
            int a=JOptionPane.showConfirmDialog(null, "The Text has been Changed.\nDo you want to Save the Changes ?");
            switch (a) {
                case 0:
                    SaveActionPerformed(evt);
                    break;
                case 1:
                    Text_area.setText("");
                    setTitle(name);
                    break;
                case 2:
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_NewActionPerformed

    private void UndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoActionPerformed
        JOptionPane.showMessageDialog(null,"This Feature is still in Beta ! " );
        
    }//GEN-LAST:event_UndoActionPerformed

    private void Go_ToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Go_ToActionPerformed
        try 
        {
            int line=Integer.parseInt(JOptionPane.showInputDialog(null, "Enter Line Number : "));
            Text_area.setCaretPosition(Text_area.getLineStartOffset(line-1));
        }
        catch (HeadlessException | NumberFormatException | BadLocationException e) 
        {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Go_ToActionPerformed

    private void View_HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_HelpActionPerformed
        JOptionPane.showMessageDialog(null,"Visit GitHub for Help !\nThank You for using this app .","Help",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_View_HelpActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        if(path.equalsIgnoreCase(""))
        {
            Save_asActionPerformed(evt);
        }
        else
        {
            File MyFile=new File(path);
            path=MyFile.getPath();
            try (FileWriter fw = new FileWriter(MyFile)) 
            {
                fw.write(Text_area.getText());
                name=MyFile.getName()+" - NotePad";
                setTitle(name);
            }
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(null, "Failed to Save the File !", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Open_File.Open_File();
        });
        t.start();
    }//GEN-LAST:event_OpenActionPerformed

    private void Save_asActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_asActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Save_File.Save_File();
        });
        t.start();
    }//GEN-LAST:event_Save_asActionPerformed

    private void Page_SetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Page_SetupActionPerformed
        try 
        {
            PrinterJob page_style=PrinterJob.getPrinterJob();
            PrintRequestAttributeSet asset=new HashPrintRequestAttributeSet();
            PageFormat page_format=page_style.pageDialog(asset);
            page_style.setPrintable((Printable) this, page_format);
            boolean value=page_style.printDialog(asset);
            if(value)
            {
                page_style.print(asset);
            }
        } 
        catch (PrinterException e) 
        {
            JOptionPane.showMessageDialog(null, "Failed to Setup Page !", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Page_SetupActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        if(Text_area.getText().equals(""))
            {}
        else if(path.equals(""))
            Save_asActionPerformed(evt);
        else
            SaveActionPerformed(evt);
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void CutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutActionPerformed
        Text_area.cut();
    }//GEN-LAST:event_CutActionPerformed

    private void CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyActionPerformed
        Text_area.copy();
    }//GEN-LAST:event_CopyActionPerformed

    private void PasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteActionPerformed
        Text_area.paste();
    }//GEN-LAST:event_PasteActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        String temp=Text_area.getText();
        Text_area.setText(temp.substring(0,Text_area.getSelectionStart())+temp.substring(Text_area.getSelectionEnd()));
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        
    }//GEN-LAST:event_SearchActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Find_Replace.Find_Replace();
        });
        t.start();
    }//GEN-LAST:event_FindActionPerformed

    private void Select_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_allActionPerformed
        Text_area.selectAll();
    }//GEN-LAST:event_Select_allActionPerformed

    private void Time_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Time_DateActionPerformed
        Text_area.insert(new Date().toString(), Text_area.getSelectionStart());
    }//GEN-LAST:event_Time_DateActionPerformed

    private void Word_WarpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Word_WarpActionPerformed
        if(Text_area.getLineWrap()==false)
            Text_area.setLineWrap(true);
        else
            Text_area.setLineWrap(false);
    }//GEN-LAST:event_Word_WarpActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.About.about();
        });
        t.start();
    }//GEN-LAST:event_AboutActionPerformed

    private void FontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Font_Chooser.Font_Choose();
        });
        t.start();
    }//GEN-LAST:event_FontActionPerformed

    private void Find_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Find_NextActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Find_Replace.Find_Replace();
        });
        t.start();
    }//GEN-LAST:event_Find_NextActionPerformed

    private void ReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReplaceActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Find_Replace.Find_Replace();
        });
        t.start();
    }//GEN-LAST:event_ReplaceActionPerformed

    private void ThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemeActionPerformed
        Thread t=new Thread(   ()->   {
            notepad.Themes.Theme();
        });
        t.start();
        
    }//GEN-LAST:event_ThemeActionPerformed

    private void Status_BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Status_BarActionPerformed
        try 
            {
                JOptionPane.showMessageDialog(null,"This Feature is still in Beta ! " );
                int line=Text_area.getLineOfOffset(Text_area.getCaretPosition());
                int column=Text_area.getCaretPosition()-Text_area.getLineStartOffset(line);
                if (StatusBar_Label.getText().equalsIgnoreCase("")) 
                {
                    StatusBar_Label.setText("Line : "+line+"    Column : "+column+"     ");
                }
                else
                {
                    StatusBar_Label.setText("");
                }
            }
            catch (BadLocationException e) 
            {
                JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_Status_BarActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
        
        try 
        {
            Graphics graphics=getGraphics();
            Graphics2D graphics2d=(Graphics2D)graphics;
            graphics.drawString(Text_area.getText(), WIDTH, WIDTH);
            PrinterJob page_style=PrinterJob.getPrinterJob();
            HashPrintRequestAttributeSet asset=new HashPrintRequestAttributeSet();
            PageFormat page_format=page_style.pageDialog(asset);
            graphics2d.translate(page_format.getImageableX(),page_format.getImageableY());
            page_style.setPrintable((Printable) this);
            page_style.print(asset);

        }
        catch (HeadlessException | PrinterException e) 
        {
            JOptionPane.showMessageDialog(null, "Failed to Print Page !", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_PrintActionPerformed

    private void Zoom_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Zoom_inActionPerformed
        if(Text_area.getFont().getSize()<70)
        {
            Text_area.setFont( Text_area.getFont().deriveFont(Text_area.getFont().getSize()+2.0f) );
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Maximum Font Size Reached !");
        }
    }//GEN-LAST:event_Zoom_inActionPerformed

    private void Zoom_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Zoom_outActionPerformed
        if(Text_area.getFont().getSize()>2)
        {
            Text_area.setFont( Text_area.getFont().deriveFont(Text_area.getFont().getSize()-2.0f) );
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Minimum Font Size Reached !");
        }
    }//GEN-LAST:event_Zoom_outActionPerformed

    private void Restore_ZoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Restore_ZoomActionPerformed
        Text_area.setFont( Text_area.getFont().deriveFont(14.0f) );
    }//GEN-LAST:event_Restore_ZoomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try 
        {
            javax.swing.UIManager.setLookAndFeel(Info.getClassName());
        }
        catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) 
        {
            JOptionPane.showMessageDialog(null, "Failed to Change Theme !", "Error", JOptionPane.ERROR_MESSAGE);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        n=new Notepad();
        try {
            java.awt.EventQueue.invokeAndWait(() -> {
                n.setVisible(true);
            });
        } catch (InterruptedException | InvocationTargetException ex) {
            Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    
    public static Notepad n;
    static String name="Untitled.txt - NotePad";
    static String path="";
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JMenuItem Copy;
    private javax.swing.JMenuItem Cut;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JMenu Edit;
    private javax.swing.JPopupMenu.Separator Edit_Separator1;
    private javax.swing.JPopupMenu.Separator Edit_Separator2;
    private javax.swing.JPopupMenu.Separator Edit_Separator3;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JPopupMenu.Separator File_Separator1;
    private javax.swing.JPopupMenu.Separator File_Separator2;
    private javax.swing.JMenuItem Find;
    private javax.swing.JMenuItem Find_Next;
    private javax.swing.JMenuItem Font;
    private javax.swing.JMenu Format;
    private javax.swing.JMenuItem Go_To;
    private javax.swing.JMenu Help;
    private javax.swing.JPopupMenu.Separator Help_Separator1;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenuItem New;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem Page_Setup;
    private javax.swing.JMenuItem Paste;
    private javax.swing.JMenuItem Print;
    private javax.swing.JMenuItem Replace;
    private javax.swing.JMenuItem Restore_Zoom;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenuItem Save_as;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JMenuItem Search;
    private javax.swing.JMenuItem Select_all;
    static javax.swing.JLabel StatusBar_Label;
    private javax.swing.JCheckBoxMenuItem Status_Bar;
    static javax.swing.JTextArea Text_area;
    private javax.swing.JMenuItem Theme;
    private javax.swing.JMenuItem Time_Date;
    private javax.swing.JMenuItem Undo;
    private javax.swing.JMenu View;
    private javax.swing.JMenuItem View_Help;
    private javax.swing.JPopupMenu.Separator View_Separator1;
    private javax.swing.JCheckBoxMenuItem Word_Warp;
    private javax.swing.JMenu Zoom;
    private javax.swing.JMenuItem Zoom_in;
    private javax.swing.JMenuItem Zoom_out;
    // End of variables declaration//GEN-END:variables

}
