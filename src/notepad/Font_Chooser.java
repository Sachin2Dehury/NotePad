/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad;

import java.awt.Font;
import java.awt.GraphicsEnvironment;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import static notepad.Themes.Info;

/**
 *
 * @author sachindehury2015@gmail.com
 */
public class Font_Chooser extends javax.swing.JFrame {

    /**
     * Creates new form Font_Chooser
     */
    public Font_Chooser() {
        for (String Font: graphics.getAvailableFontFamilyNames()) {
            Fonts.addElement(Font);
        }
        for (int i = 2; i < 74; i+=2) {
            Size.addElement(String.valueOf(i));
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Font_Label = new javax.swing.JLabel();
        Size_Label = new javax.swing.JLabel();
        Style_Label = new javax.swing.JLabel();
        Preview_Label = new javax.swing.JLabel();
        Preview = new javax.swing.JLabel();
        Font_ScrollPane = new javax.swing.JScrollPane();
        Font_List = new javax.swing.JList<>();
        Size_ScrollPane = new javax.swing.JScrollPane();
        Size_List = new javax.swing.JList<>();
        Style_ScrollPane = new javax.swing.JScrollPane();
        Style_List = new javax.swing.JList<>();
        OK_Button = new javax.swing.JButton();
        Cancel_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Font Chooser");
        setLocation(new java.awt.Point(500, 200));
        setName("Font_Chooser_Frame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(440, 370));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        Font_Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Font_Label.setText("Font :");

        Size_Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Size_Label.setText("Size :");

        Style_Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Style_Label.setText("Style :");

        Preview_Label.setBackground(new java.awt.Color(255, 255, 255));
        Preview_Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Preview_Label.setText("AaBbYyZz");
        Preview_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Preview.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Preview.setText("Sample :");

        Font_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Font_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        Font_ScrollPane.setDoubleBuffered(true);

        Font_List.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Font_List.setModel(Fonts);
        Font_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Font_ListMouseClicked(evt);
            }
        });
        Font_ScrollPane.setViewportView(Font_List);

        Size_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Size_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        Size_List.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Size_List.setModel(Size);
        Size_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Size_ListMouseClicked(evt);
            }
        });
        Size_ScrollPane.setViewportView(Size_List);

        Style_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Style_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        Style_List.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Style_List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Regular", "Bold", "Italic", "Bold Italic" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Style_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Style_ListMouseClicked(evt);
            }
        });
        Style_ScrollPane.setViewportView(Style_List);

        OK_Button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OK_Button.setText("OK");
        OK_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK_ButtonActionPerformed(evt);
            }
        });

        Cancel_Button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Cancel_Button.setText("Cancel");
        Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Font_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Font_Label))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Size_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Size_Label))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Style_Label)
                            .addComponent(Style_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Preview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Preview_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(OK_Button)
                        .addGap(30, 30, 30)
                        .addComponent(Cancel_Button)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Size_Label)
                        .addComponent(Style_Label))
                    .addComponent(Font_Label, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Font_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                        .addComponent(Size_ScrollPane))
                    .addComponent(Style_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Preview)
                    .addComponent(Preview_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OK_Button)
                    .addComponent(Cancel_Button))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_ButtonActionPerformed
        dispose();
    }//GEN-LAST:event_Cancel_ButtonActionPerformed

    private void OK_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_ButtonActionPerformed
        try {
            notepad.Notepad.Text_area.setFont(Sample);
        }
        finally {
            Cancel_ButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_OK_ButtonActionPerformed

    private void Font_ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Font_ListMouseClicked
        changeFont();
    }//GEN-LAST:event_Font_ListMouseClicked

    private void Size_ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Size_ListMouseClicked
        changeFont();
    }//GEN-LAST:event_Size_ListMouseClicked

    private void Style_ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Style_ListMouseClicked
        changeFont();
    }//GEN-LAST:event_Style_ListMouseClicked

    /**
     */
    public static void Font_Choose() {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try 
        {
            javax.swing.UIManager.setLookAndFeel(Info.getClassName());
        }
        catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) 
        {
            JOptionPane.showMessageDialog(null, "Failed to Change Theme !", "Error", JOptionPane.ERROR_MESSAGE);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Font_Chooser().setVisible(true);
        });
    }
    
    public static void changeFont() {
        try 
        {
            Sample=new Font(getFontName(),getFontStyle(),getFontSize());
            Preview_Label.setFont(Sample);
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public static String getFontName() {
        if(Font_List.getSelectedValue()!=null)
            return Font_List.getSelectedValue();
        else
            return "Tahoma";
    }
    
    public static Integer getFontStyle() {
        switch(Style_List.getSelectedIndex())
        {
            case 0:
                return Font.PLAIN;
            case 1:
                return Font.BOLD;
            case 2:
                return Font.ITALIC;
            case 3:
                return Font.BOLD+Font.ITALIC;
        }
        return Font.PLAIN;
    }
    
    public static Integer getFontSize() {
        if(Size_List.getSelectedValue()!=null)
            return Integer.parseInt(Size_List.getSelectedValue());
        else
            return 12;
    }
    
    private final static GraphicsEnvironment graphics=GraphicsEnvironment.getLocalGraphicsEnvironment();
    private final DefaultListModel<String> Fonts=new DefaultListModel<>();
    private final DefaultListModel<String> Size=new DefaultListModel<>();
    private static Font Sample;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel_Button;
    private javax.swing.JLabel Font_Label;
    private static javax.swing.JList<String> Font_List;
    private javax.swing.JScrollPane Font_ScrollPane;
    private javax.swing.JButton OK_Button;
    private javax.swing.JLabel Preview;
    private static javax.swing.JLabel Preview_Label;
    private javax.swing.JLabel Size_Label;
    private static javax.swing.JList<String> Size_List;
    private javax.swing.JScrollPane Size_ScrollPane;
    private javax.swing.JLabel Style_Label;
    private static javax.swing.JList<String> Style_List;
    private javax.swing.JScrollPane Style_ScrollPane;
    // End of variables declaration//GEN-END:variables
}
