/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad;

import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import static notepad.Notepad.n;

/**
 *
 * @author sachindehury2015@gmail.com
 */
public class Themes extends javax.swing.JFrame {

    /**
     * Creates new form Theme
     */
    public Themes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OK_Button = new javax.swing.JButton();
        UI_Label = new javax.swing.JLabel();
        UI_ScrollPane = new javax.swing.JScrollPane();
        UI_List = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Themes");
        setLocation(new java.awt.Point(500, 200));
        setName("Themes_Frame"); // NOI18N
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        OK_Button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OK_Button.setText("OK");
        OK_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK_ButtonActionPerformed(evt);
            }
        });

        UI_Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UI_Label.setText("Themes :");

        UI_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        UI_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        UI_List.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UI_List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Metal", "Nimbus", "CDE/Motif", "Windows", "WindowsClassic" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        UI_List.setMaximumSize(new java.awt.Dimension(100, 110));
        UI_List.setMinimumSize(new java.awt.Dimension(100, 110));
        UI_List.setPreferredSize(null);
        UI_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UI_ListMouseClicked(evt);
            }
        });
        UI_ScrollPane.setViewportView(UI_List);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(UI_Label))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(UI_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(OK_Button)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(UI_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UI_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(OK_Button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UI_ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UI_ListMouseClicked
        try 
        {
            Info=THEMES[UI_List.getSelectedIndex()];
            try 
            {
                javax.swing.UIManager.setLookAndFeel(Info.getClassName());
            }
            catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) 
            {
                JOptionPane.showMessageDialog(null, "Failed to Change Theme !", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch (HeadlessException e) 
        {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
    }//GEN-LAST:event_UI_ListMouseClicked

    private void OK_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_ButtonActionPerformed
        try 
        {
            if(UI_List.getSelectedIndex()==-1) 
                Info=THEMES[3];
            else
                Info=THEMES[UI_List.getSelectedIndex()];
            javax.swing.UIManager.setLookAndFeel(Info.getClassName());
            SwingUtilities.updateComponentTreeUI(n);
            n.pack();
            dispose();
        }
        catch (HeadlessException | ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e ) 
        {
            JOptionPane.showMessageDialog(null, "Failed to Change Theme !", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_OK_ButtonActionPerformed

    /**
     */
    public static void Theme() {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Themes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Themes().setVisible(true);
        });
    }

    private static final UIManager.LookAndFeelInfo THEMES[]=UIManager.getInstalledLookAndFeels();
    public static UIManager.LookAndFeelInfo Info=THEMES[3];

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK_Button;
    private javax.swing.JLabel UI_Label;
    private javax.swing.JList<String> UI_List;
    private javax.swing.JScrollPane UI_ScrollPane;
    // End of variables declaration//GEN-END:variables
}
